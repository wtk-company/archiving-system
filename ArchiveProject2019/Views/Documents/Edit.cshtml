@model ArchiveProject2019.ViewModel.DocumentFieldsValuesViewModel
@using ArchiveProject2019.Models
@{
    ViewBag.Title = "تعديل وثيقة ";
    Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
}

@Html.Partial("_StartView")


<script src="~/Scripts/ckeditor/ckeditor.js"></script>

<a href="@Url.Action("index","Documents")" class="btn btn-default">عودة لقائمةالوثائق  <i class="glyphicon glyphicon-backward"></i></a>



@using (Html.BeginForm("Edit", "Documents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()



    <div class="form-horizontal">

        @Html.HiddenFor(a=>Model.Document.Id)
        @Html.HiddenFor(a => Model.Document.FormId)
        @Html.HiddenFor(a=>a.Document.CreatedById)
        @Html.HiddenFor(a => a.Document.CreatedAt)


        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.Document.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Document.DepartmentId, ViewBag.Departments as SelectList, htmlAttributes: new { style = "padding:2px", @class = "form-control", @id = "TOGGLE" })
                    @Html.ValidationMessageFor(model => model.Document.DepartmentId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.Document.Kind, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Document.Kind, ViewBag.kinds as SelectList, htmlAttributes: new { style = "padding:2px", @class = "form-control", @id = "TOGGLE" })
                    @Html.ValidationMessageFor(model => model.Document.Kind, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.Document.Party, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Document.Party, ViewBag.partyies as SelectList, htmlAttributes: new { style = "padding:2px", @class = "form-control", @id = "TOGGLE" })
                    @Html.ValidationMessageFor(model => model.Document.Party, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Document.DocumentNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Document.DocumentNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Document.DocumentNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Document.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Document.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Document.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Document.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Document.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Document.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Document.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Document.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Document.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Document.DocumentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Document.DocumentDate, "{0:dd/MM/yyyy}", new { @class = "form-control", @type = "date" })
                @Html.ValidationMessageFor(model => model.Document.DocumentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Document.FileUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              
                @Html.HiddenFor(model => model.Document.FileUrl)
                <input  type="file" name="UploadFile" />

                @Html.ValidationMessageFor(model => model.Document.FileUrl, "", new { @class = "text-danger" })
            </div>


        </div>


        <div class="form-group">


            @Html.LabelFor(model => model.Document.Notes, htmlAttributes: new { @id = "NoteId", @class = "control-label col-md-2 glyphicon glyphicon-arrow-up" })
            <div id="NoteSlide" class="col-md-10">
                @*<textarea class="ckeditor" name="Notes"></textarea>*@

                @Html.TextAreaFor(model => model.Document.Notes, new { @id = "ck", @class = "ckeditor" })
                @Html.ValidationMessageFor(model => model.Document.Notes, "", new { @class = "text-danger" })
            </div>
        </div>



        @for (int i = 0; i < Model.FieldsValues.Values.Count; i++)
        {

            @Html.HiddenFor(a=>a.FieldsValues.Values[i].CreatedAt)
            @Html.HiddenFor(a => a.FieldsValues.Values[i].CreatedById)
            @Html.HiddenFor(a=>a.FieldsValues.Values[i].Id)

            <div class="form-group">
                <div class="control-label col-md-2">
                    @Model.FieldsValues.Fields[i].Name
                </div>

                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Values[i].FieldValue, new { htmlAttributes = new { @class = "form-control" } })*@
                    @switch (Model.FieldsValues.Fields[i].Type)
                    {
                        case "bool":
                            @Html.RadioButtonFor(model => Model.FieldsValues.Values[i].FieldValue, "true")@:نعم
                            @Html.RadioButtonFor(model => Model.FieldsValues.Values[i].FieldValue, "false")@:لا

                            break;


                        case "float":
                        case "text":
                        case "phone":
                        case "email":
                            @*@Model.FieldsValues.Fields[i].IsRequired*@
                            @Html.TextBoxFor(model => model.FieldsValues.Values[i].FieldValue, new { @class = "form-control" })
                            break;


                        case "file":
                            @*@Model.FieldsValues.Fields[i].IsRequired*@
                             @Html.Hidden(Model.FieldsValues.Values[i].FieldValue)
                           
                            <input type="file" name="FieldFile" />

                            break;

                        case "date":
                            @Html.TextBoxFor(model => model.FieldsValues.Values[i].FieldValue, new { @class = "form-control", @type = "date" })
                            break;

                            @*@Html.RadioButton(Model.Values[i].FieldValue,"نعم")
                                @Html.RadioButton(Model.Values[i].FieldValue, "لا")*@

                            //break;
                    }
                    @Html.ValidationMessageFor(model => Model.FieldsValues.Values[i].Id, "", new { @class = "text-danger" })
                </div>




            </div>





                        <div style="outline: 2px solid yellow;margin:1em;display:inline-block;overflow:visible"></div>

                        @Html.HiddenFor(model => model.FieldsValues.Values[i].FieldId)
                        @Html.HiddenFor(model => model.FieldsValues.Fields[i].IsRequired)


                        @Html.HiddenFor(model => model.FieldsValues.Fields[i].Type)
                        @Html.HiddenFor(model => model.FieldsValues.Fields[i].Name)
        }







        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="تعديل الوثيقة " class="btn btn-primary" />
            </div>
        </div>
    </div>
}





@Html.Partial("_LastView")






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>


        $("#NoteId").click(function () {

            $("#NoteSlide").slideToggle(300);

        });



       
    </script>
}
